{"version":3,"sources":["voting-results.ts","services/vote-service.ts","enums/VotingType.ts","services/settings-service.ts","services/asset-service.ts","packages/undefined@undefined"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;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","file":"","sourcesContent":["import {getVotingResults} from \"./services/vote-service\";\nimport {iframe} from \"trello-powerups\";\nimport {IMember} from \"./interfaces/IMember\";\nimport thumbsUpImg from './images/thumbs_up_white.svg';\nimport thumbsDownImg from './images/thumbs_down_white.svg';\nimport {cleanupPath} from \"./services/asset-service\";\nimport {IVotingResultRenderingInformation} from \"./interfaces/IVotingResultRenderingInformation\";\n\nconst t = iframe();\n\nconst upVotingRendering: IVotingResultRenderingInformation = {\n    voters: [],\n    voteAnonymously: true,\n    votersCountSelector: $('#upVotersCount'),\n    votersSelector: $('#upVoters'),\n    votesSelector: $('#upVotes'),\n    votingIconSelector: $('#upVotingIcon'),\n    votingResultSelector: $('#upVotingResult'),\n    votingResultHeaderSelector: $('#upVotingResultHeader'),\n    votingTypeIcon: thumbsUpImg\n};\n\nconst downVotingRendering: IVotingResultRenderingInformation = {\n    voters: [],\n    voteAnonymously: true,\n    votersCountSelector: $('#downVotersCount'),\n    votersSelector: $('#downVoters'),\n    votesSelector: $('#downVotes'),\n    votingIconSelector: $('#downVotingIcon'),\n    votingResultSelector: $('#downVotingResult'),\n    votingResultHeaderSelector: $('#downVotingResultHeader'),\n    votingTypeIcon: thumbsDownImg\n};\n\nconst votingResultIcon = (image) => 'url(\"' + cleanupPath(image) + '\")';\n\nconst toggle = (element: JQuery) => element.slideToggle(0, () => t.sizeTo('#votingResults'));\n\nfunction voterInformations(voter: IMember) {\n    const voterIcon = $('<div />').attr('class', 'tile-icon').append(\n        $('<img>', {src: voter.avatar, 'class': 'voter-icon'})\n    );\n\n    const voterName = $('<div />').attr('class', 'tile-content').append(\n        $('<div />').attr('class', 'tile-title').text(voter.fullName || voter.username || '')\n    );\n\n    return $('<div />').attr('class', 'tile tile-centered')\n        .append(voterIcon)\n        .append(voterName);\n}\n\nfunction renderVoters(result: IVotingResultRenderingInformation) {\n    if (! result.voteAnonymously) {\n        const votesWithNames = result.voters.filter(voter => (voter.fullName !== undefined || voter.username !== undefined));\n\n        if (votesWithNames.length) {\n            result.votesSelector.attr('class', 'expandable');\n        }\n\n        votesWithNames.forEach(voter => result.votersSelector.append(voterInformations(voter)));\n    }\n}\n\nfunction renderResult(result: IVotingResultRenderingInformation) {\n    // clear old voters\n    result.votersSelector.empty();\n\n    if (result.voters.length) {\n        result.votersCountSelector.text(result.voters.length);\n        result.votingIconSelector.css('background-image', votingResultIcon(result.votingTypeIcon));\n        result.votingResultSelector.addClass('visible');\n        result.votingResultSelector.removeClass('hidden');\n        result.votingResultHeaderSelector.addClass('visible');\n        result.votingResultHeaderSelector.removeClass('hidden');\n\n        renderVoters(result);\n    } else {\n        // hide empty up voters in result\n        result.votingResultSelector.addClass('hidden');\n        result.votingResultSelector.removeClass('visible');\n        result.votingResultHeaderSelector.addClass('hidden');\n        result.votingResultHeaderSelector.removeClass('visible');\n    }\n}\n\nupVotingRendering.votesSelector.click(function () {\n    toggle(upVotingRendering.votersSelector);\n});\n\ndownVotingRendering.votesSelector.click(function () {\n    toggle(downVotingRendering.votersSelector);\n});\n\nt.render(() => {\n    getVotingResults(t)\n        .then((results) => {\n            if (results) {\n                upVotingRendering.voters = results.upVoters;\n                upVotingRendering.voteAnonymously = results.voteAnonymously;\n                renderResult(upVotingRendering);\n\n                downVotingRendering.voters = results.downVoters;\n                downVotingRendering.voteAnonymously = results.voteAnonymously;\n                renderResult(downVotingRendering);\n            }\n        })\n        .then(() => t.sizeTo('#votingResults'));\n});\n","import {ICardVotings} from \"../interfaces/ICardVotings\";\nimport {VotingType} from \"../enums/VotingType\";\nimport {IVotingResults} from \"../interfaces/IVotingResults\";\nimport {IMember} from \"../interfaces/IMember\";\nimport {IVote, IVoteAnonymous} from \"../interfaces/IVote\";\nimport {ICard} from \"../interfaces/ICard\";\nimport {settings} from \"./settings-service\";\n\nconst votings = (t: any) => t.get('card', 'shared', 'votings', []) as Promise<ICardVotings[]>;\nconst card = (t: any) => t.card('id') as Promise<ICard>;\nconst member = (t: any) => t.member('id', 'username', 'fullName', 'avatar') as Promise<IMember>;\n\nconst votingsOnCardFilter = (currentCardId: string) => (votings: ICardVotings) => votings.cardId === currentCardId;\nconst votesForMemberFilter = (currentMemberId: string) => (vote: IVote | IVoteAnonymous) =>\n    (isAnonymous(vote) ? vote.memberId === currentMemberId : vote.member.id === currentMemberId);\n\nfunction isAnonymous(vote: IVote | IVoteAnonymous): vote is IVoteAnonymous {\n    return (<IVoteAnonymous>vote).memberId !== undefined;\n}\n\nconst voteConverter = (vote: IVote | IVoteAnonymous): IVote => {\n    if (isAnonymous(vote)) {\n        return {\n            member: { id: vote.memberId },\n            votingType: vote.votingType\n        }\n    } else {\n        return vote;\n    }\n};\n\nfunction  getVotesOnCard(votings: ICardVotings[], currentCardId: string): IVote[] | undefined {\n    const existingVotesOnCard = votings.find(votingsOnCardFilter(currentCardId));\n\n    if (existingVotesOnCard) {\n        return existingVotesOnCard.votes.map(voteConverter);\n    }\n}\n\nfunction updateVote(votes: (IVote | IVoteAnonymous)[], currentMember: IMember, currentVotingType: VotingType) {\n    const existingVoteForMember = votes.find(votesForMemberFilter(currentMember.id));\n\n    if (existingVoteForMember) {\n        if (isAnonymous(existingVoteForMember)) {\n            // remove old vote\n            votes.splice(votes.indexOf(existingVoteForMember), 1);\n\n            // create and add new vote\n            votes.push({\n                member: currentMember,\n                votingType: currentVotingType\n            })\n        } else {\n            existingVoteForMember.votingType = currentVotingType;\n            existingVoteForMember.member = currentMember;\n        }\n    } else {\n        votes.push({\n            member: currentMember,\n            votingType: currentVotingType\n        })\n    }\n}\n\nexport const votingTypeFilter = (currentVotingType: VotingType) => (vote: IVote) => vote.votingType === currentVotingType;\n\nexport function getVotesOnCurrentCard(t: any): Promise<IVote[] | undefined> {\n    return Promise.all([votings(t), card(t)])\n        .then(([votings, currentCard]) => getVotesOnCard(votings, currentCard.id));\n}\n\nexport function getVotesOnCurrentCardForCurrentMember(t: any): Promise<IVote | undefined> {\n    return Promise.all([votings(t), card(t), member(t)])\n        .then(([votings, currentCard, currentMember]) => {\n                const votesOnCard = getVotesOnCard(votings, currentCard.id);\n\n                if (votesOnCard) {\n                    return votesOnCard.find(votesForMemberFilter(currentMember.id));\n                }\n        });\n}\n\nexport function vote(t: any, currentVotingType: VotingType) {\n    return Promise.all([votings(t), card(t), member(t), settings(t)])\n        .then(([votings, currentCard, currentMember, settings]) => {\n            const votingsOnCard = votings.find(votingsOnCardFilter(currentCard.id));\n\n            if (settings.voteAnonymously) {\n                // anonymize member\n                currentMember = {id: currentMember.id};\n            }\n\n            if (votingsOnCard) {\n                updateVote(votingsOnCard.votes, currentMember, currentVotingType);\n            } else {\n                votings.push({\n                    cardId: currentCard.id,\n                    votes: [{\n                        member: currentMember,\n                        votingType: currentVotingType\n                    }]\n                })\n            }\n\n            t.set('card', 'shared', 'votings', votings);\n        });\n}\n\nexport function deleteVote(t: any) {\n    return Promise.all([votings(t), card(t), member(t)])\n        .then(([votings, currentCard, currentMember]) => {\n            const votingsOnCard = votings.find(votingsOnCardFilter(currentCard.id));\n\n            if (votingsOnCard) {\n                const votes = votingsOnCard.votes;\n                const existingVoteForMember = votes.find(votesForMemberFilter(currentMember.id));\n\n                if (existingVoteForMember) {\n                    votes.splice(votes.indexOf(existingVoteForMember), 1);\n                    t.set('card', 'shared', 'votings', votings);\n                }\n            }\n        });\n}\n\nexport function getVotingResults(t: any): Promise<IVotingResults | undefined> {\n    return Promise.all([votings(t), card(t), settings(t)])\n        .then(([votings, currentCard, settings]) => {\n            const votes = getVotesOnCard(votings, currentCard.id);\n\n            if (votes) {\n                const upVoters = votes.filter(votingTypeFilter(VotingType.UP)).map(vote => vote.member);\n                const downVoters = votes.filter(votingTypeFilter(VotingType.DOWN)).map(vote => vote.member);\n\n                return {\n                    voteAnonymously: settings.voteAnonymously,\n                    upVoters: upVoters,\n                    downVoters: downVoters\n                }\n            }\n        });\n}\n","export const enum VotingType {\n    UP,\n    DOWN\n}","import {ISettings} from \"../interfaces/ISettings\";\n\nexport const defaultSettings: ISettings = {voteAnonymously: true};\n\nexport const settings = (t: any) => t.get('board', 'shared', 'settings', defaultSettings) as Promise<ISettings>;\n\nexport const updateSettings = (t: any, settings: ISettings) => t.set('board', 'shared', 'settings', settings);","export function cleanupPath(path: string): string {\n    return '.' + path;\n}",null]}